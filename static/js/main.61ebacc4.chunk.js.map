{"version":3,"sources":["app/table/table.js","app/form/form.js","app/api/api.js","app/app.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","this","htmlFor","type","id","onChange","Component","Api","data","fetch","then","result","json","entry","email","phone","App","characters","filter","character","i","console","log","className","ReactDOM","render","document","getElementById"],"mappings":"gOAEMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,2CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MAWjB,OAAO,gCAAQJ,KAcJS,EAXD,SAACV,GACX,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OClChEE,E,4MAEFC,aAAe,SAACC,GACZ,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKV,EAAOS,K,EAIhBE,WAAa,WACT,EAAKjB,MAAMkB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,e,EAGvBA,aAAe,CACXd,KAAM,GACNC,IAAK,I,EAGTY,MAAQ,EAAKC,a,4CAEb,WACI,MAAsBC,KAAKF,MAAnBb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHT,MAAOT,EACPmB,SAAUJ,KAAKT,eACjB,uBAAOU,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHT,MAAOR,EACPkB,SAAUJ,KAAKT,eACf,uBAAOW,KAAK,SAASR,MAAM,SAASP,QAASa,KAAKJ,oB,GAzC7CS,aA+CJf,IC/CTgB,E,4MACJR,MAAQ,CACNS,KAAM,I,uDAIR,WAAqB,IAAD,OAGlBC,MAFY,8CAGTC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKf,SAAS,CACZY,KAAMG,S,oBAKd,WACE,IAEMA,EAFSV,KAAKF,MAAbS,KAEazB,KAAI,SAAC8B,EAAO5B,GAC9B,OAAO,+BAAiB4B,EAAM3B,KAAvB,+BAAyD2B,EAAMC,MAA/D,+BAAkGD,EAAME,QAA/F9B,MAGlB,OAAO,6BAAK0B,Q,GAzBEL,aA6BHC,IC1BTS,E,4MAEFjB,MAAQ,CACJkB,WAAY,I,EA0BhB5B,gBAAkB,SAACJ,GAEf,IAAQgC,EAAe,EAAKlB,MAApBkB,WAER,EAAKrB,SAAS,CACVqB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMnC,Q,EAKzBa,aAAe,SAACqB,GACZ,EAAKvB,SAAS,CAAEqB,WAAW,GAAD,mBAAM,EAAKlB,MAAMkB,YAAjB,CAA6BE,O,4CAnC3D,WACI,IAAQF,EAAehB,KAAKF,MAApBkB,WAER,OADAI,QAAQC,IAAIL,GAER,sBAAKM,UAAU,YAAf,UACI,iEACA,oFACA,cAAC,EAAD,CAAOzC,cAAemC,EAAY5B,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMS,aAAcG,KAAKH,eACzB,uEACA,gCACI,kCACI,4CACA,6CACA,kDAGR,cAAC,EAAD,IACA,6D,GAxBEQ,aA8CHU,IC9CfQ,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.61ebacc4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n    })\r\n\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props\r\n\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n      }\r\n\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n      \r\n        return (\r\n          <form>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange} />\r\n            <label htmlFor=\"job\">Job</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"job\"\r\n              id=\"job\"\r\n              value={job}\r\n              onChange={this.handleChange} />\r\n              <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n          </form>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react'\r\n\r\nclass Api extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    const url = 'https://jsonplaceholder.typicode.com/users'\r\n\r\n    fetch(url)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          data: result,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {data} = this.state\r\n\r\n    const result = data.map((entry, index) => {\r\n      return <li key={index}>{entry.name} __________________________ {entry.email} __________________________ {entry.phone}</li>\r\n    })\r\n\r\n    return <ul>{result}</ul>\r\n  }\r\n}\r\n\r\nexport default Api","import React, { Component } from 'react';\r\nimport Table from './table/table';\r\nimport Form from './form/form';\r\nimport Api from './api/api';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        characters: []\r\n    }\r\n\r\n    render() {\r\n        const { characters } = this.state\r\n        console.log(characters)\r\n        return (\r\n            <div className=\"Container\">\r\n                <h1>React Tutorial By Shoaib Khalil</h1>\r\n                <p>Add a character with a name and a job to the table.</p>\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n                <Form handleSubmit={this.handleSubmit} />\r\n                <h3>Data we got from the API as response!</h3>\r\n                <table>\r\n                    <thead>\r\n                        <th>___Name___</th>\r\n                        <th>___Email___</th>\r\n                        <th>___Phone___</th>\r\n                    </thead>\r\n                </table>\r\n                <Api />\r\n                <p>*Changes Are Working*</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    removeCharacter = (index) => {\r\n\r\n        const { characters } = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n\r\n    handleSubmit = (character) => {\r\n        this.setState({ characters: [...this.state.characters, character] })\r\n    }\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/app';\n\nReactDOM.render( <App /> ,document.getElementById('root') );\n"],"sourceRoot":""}